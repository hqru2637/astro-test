---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import type { GitFileInfo } from '../scripts/getFileInfo';
import AuthorProfile from '../components/AuthorProfile.astro';
import Badge from 'fulldev-ui/components/Badge.astro';

type Props = CollectionEntry<'blog'>['data'] & GitFileInfo;

const { title, description, heroImage, author: _author, createdAt, updatedAt, tags } = Astro.props;
const authors = typeof _author === 'string' ? [_author] : _author;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
			.author-container {
				display: flex;
				justify-content: center; /* 横方向に中央揃え */
				align-items: center; /* 縦方向に中央揃え（アイコンが縦方向に揃う） */
				/* gap: 1px; */
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<FormattedDate date={createdAt} />
							<div class="last-updated-on">
								Last updated on <FormattedDate date={updatedAt} />
							</div>
						</div>
						<h1>{title}</h1>
						<div class="author-container">
							{authors.map(author => <AuthorProfile author={author} />)}
						</div>
						<div>
							{tags.map(t => <Badge size="lg" color="base">{t}</Badge>)}
						</div>
						<hr />
					</div>
					<slot />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
